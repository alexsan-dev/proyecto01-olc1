START ::= METHODS

METHODS ::= METHODS METHOD | METHOD

METHOD ::= COMMENTS | NEWCLASS | FUNCTION | ASSIGNMENT
| error '{' 

COMMENTS ::= COMMENTS MULTICOMMENT
| COMMENTS COMMENT
| MULTICOMMENT
| COMMENT

COMMENT ::= cmt

MULTICOMMENT ::= mcmt

METHODCONTENT ::= '{'
DECLARATIONS:list '}' 
| '{' '}'

NEWCLASS ::= classsym id METHODCONTENT

FUNCTIONHEADER ::= id '('
FUNCTIONPARAMS ')' 
| id '(' ')' 

FUNCTIONPARAMS ::= FUNCTIONPARAMS ',' EXPRESSIONS | EXPRESSIONS 

FUNCTION ::= FUNCTIONHEADER METHODCONTENT

DECLARATIONS ::= DECLARATIONS DECLARATION ';' 
| DECLARATIONS DECLARATIONS
| DECLARATION ';'
| DECLARATION

DECLARATION ::= CONTROLSEQ | FORSEQ | WHILESEQ 
| DOWHILESEQ | SWITCHSEQ | CONSOLESEQ | FUNCTIONHEADER 
| EXPRESSIONS | ASSIGNMENT | NEWCLASS | FUNCTION | COMMENTS 

INLINEASSIGNMENTS ::= INLINEASSIGNMENTS ',' INLINEASSIGNMENT
| INLINEASSIGNMENT 

INLINEASSIGNMENT ::= id '=' EXPRESSIONS

ASSIGNMENT ::= VARTYPE id
| VARTYPE INLINEASSIGNMENTS | INLINEASSIGNMENTS {: :};

VARTYPE ::= var | let | constsym 

EXPRESSIONS ::= EXPRESSIONS EXPRESSIONOPT EXPRESSIONS
| '(' EXPRESSIONS ')'
| '!' EXPRESSIONS
| '-''-' EXPRESSIONS
| '-' EXPRESSIONS
| VARVALUE

EXPRESSIONOPT ::= '+'| '-' | '*' | '*''*'
| '/' | '%' | '|| | '&&' | '^' | '!='
| '==' | '+=' | '-=' | '*=' | '^='
| '/=' | '%=' | '+=' | '-=' | '>'
| '<' 

VARVALUE ::= decimal | strtext | breaksym | id | booltrue
| boolfalse | id '+''+' | id '-''-' | '+''+' id
| requiresym '(' strtext ')'

CONTROLSEQ ::= CONSTROLSEQSYM '(' EXPRESSIONS
')' METHODCONTENT
| elsesym METHODCONTENT

CONSTROLSEQSYM ::= ifsym | elsesym ifsym 

FORSEQ ::= forsym '(' FORSEQPARAMS ')'
METHODCONTENT

FORSEQPARAMS ::= ASSIGNMENT ';' EXPRESSIONS ';' ASSIGNMENT
| ASSIGNMENT ';' EXPRESSIONS ';' EXPRESSIONS 

WHILESEQ ::= whilesym '(' EXPRESSIONS ')'
METHODCONTENT {: :};

DOWHILESEQ ::= dosym METHODCONTENT whilesym
'(' EXPRESSIONS ')'

SWITCHSEQ ::= switchsym '(' VARVALUE ')'
'{' SWITCHSEQCASES defaultsym colom
DECLARATIONS '}'
| switchsym '(' VARVALUE ')'
'{' SWITCHSEQCASES '}' 

SWITCHSEQCASES ::= SWITCHSEQCASES SWITCHSEQCONTENT
| SWITCHSEQCONTENT 

SWITCHSEQCONTENT ::= casesym VARVALUE colom DECLARATIONS

CONSOLESEQ ::= console dot logsym
'(' EXPRESSIONS ')'
| console dot logsym '(' ')'